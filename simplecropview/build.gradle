apply plugin: 'com.android.library'

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])

  implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
  implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
  androidTestImplementation 'androidx.test.ext:junit:1.1.3'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
  androidTestImplementation 'junit:junit:4.13.2'
}

android {
  compileSdkVersion 30
  buildToolsVersion '30.0.3'

  defaultConfig {
    minSdkVersion 14
    targetSdkVersion 30
    versionCode 26
    versionName "1.1.8"
    consumerProguardFiles 'proguard-rules.pro'
  }

  dexOptions {
    preDexLibraries = false
  }
}

def file = project.rootProject.file('local.properties')
if (!file.exists()) return

apply plugin: 'com.github.dcendents.android-maven'
//apply plugin: 'com.jfrog.bintray'

group = 'com.sergiocasaspastor'
version = '1.1.8'
def siteUrl = 'https://github.com/sergiocasaspastor/SimpleCropView'
def gitUrl = 'https://github.com/sergiocasaspastor/SimpleCropView.git'
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

install {
  repositories.mavenInstaller {
    pom {
      project {
        packaging 'aar'
        name 'SimpleCropView'
        url siteUrl
        licenses {
          license {
            name 'The MIT License (MIT)'
            url 'http://opensource.org/licenses/MIT'
          }
        }
        developers {
          developer {
            id 'sergiocasaspastor'
            name 'Sergio Casas'
            email 'scasap00@gmail.com'
          }
        }
        scm {
          connection 'https://github.com/sergiocasaspastor/SimpleCropView.git'
          developerConnection 'https://github.com/sergiocasaspastor/SimpleCropView.git'
          url siteUrl
        }
      }
    }
  }
}

task sourcesJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  classifier = 'sources'
}

task javadoc(type: Javadoc) {
  source = android.sourceSets.main.java.srcDirs
  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}
artifacts {
  archives javadocJar
  archives sourcesJar
}

//task findConventions << {
//  println project.getConvention()
//}
